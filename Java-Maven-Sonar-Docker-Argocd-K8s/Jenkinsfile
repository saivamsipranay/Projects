pipeline {
    agent { label 'JENKINS_SLAVE' }
    stages {
        stage('Git Checkout') {
            steps {
                sh 'echo passed'
            }
        }
        stage('Build and Test') {
            steps{
                sh 'cd Java-Maven-Sonar-Docker-Argocd-K8s && mvn clean package'
                archiveArtifacts artifacts: '**/target/*.jar', followSymlinks: false
            }
        }
        stage('Static code Analysis') {
            environment {
                SONAR_URL = "http://34.125.230.194:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'SONAR_TOKEN', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd Java-Maven-Sonar-Docker-Argocd-K8s && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }
        stage('Docker Image Build') {
            environment {
                DOCKER_IMAGE = "saivamsipranay/complite_cicd:${BUILD_NUMBER}"
            }
            steps {
                script {
                    sh "cd Java-Maven-Sonar-Docker-Argocd-K8s && docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }
        stage('Docker Image Push') {
            environment {
                DOCKERHUB_CREDENTIALS = credentials('Docker_hub_TOKEN')
                DOCKER_IMAGE = "saivamsipranay/complite_cicd:${BUILD_NUMBER}"
            }  
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh "docker image push ${DOCKER_IMAGE}"
            }          
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "iam-veeramalla"
            }
            steps {
                withCredentials([string(credentialsId: 'githubtoken', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "saivamsipranay022@gmail.com"
                        git config user.name "saivamsipranay"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/Deployment.yml
                        git add spring-boot-app-manifests/Deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
    post {
        success {
            mail subject: "jenkins Build of ${JOB_NAME} with id ${BUILD_NUMBER} is successfull",
                 body: "use this url ${BUILD_URL} for more info.",
                 from: 'my_devops.com',
                  to: "team-all@svp.com"
        }
        failure {
            mail subject: "jenkins Build of ${JOB_NAME} with id ${BUILD_NUMBER} is failed",
                 body: "use this url ${BUILD_URL} for more info.",
                 from: 'my_devops.com',
                 to: "${GIT_COMMITTER_EMAIL}"
        }
    }
}